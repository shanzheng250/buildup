网络编程模型
应用层 http
传输层 tcp/udp
网络层  ip
数据链路层
物理层

tomcat是web服务器也是servlet容器，为什么这么说呢？
首先tomcat实际上是自定义了req和res的对象，然后在connector模块中通过socket编程对请求进行封装，然后封装成servlet对象，
利用servlet进行处理。因此在tomcat的lib包中有servlet的jar包。

tomcat的架构：
    server
        connector -- executor  对外的连接 实际上是socket的传输层
        container
            engine
                host
                    context  -- 实际的web应用


1、tomcat架构 主要是根据server.xml来读取配置的。
2、tomcat的启动时在bootstrap类中，通过main方法，然后通过对Linux命令中的JCommon命令进行容器的初始化
    容器的初始化都继承了接口lifecycle，因此调用init的方法时，从内到外都进行了一键化初始化，start，stop都是一样的
3、tomcat的connector的模块是主要的调优模块，首先是实现了socket编程，在1.7之前默认是BIO，就是一个连接进行一个阻塞的连接
   之后支持多路复用(NIO)和netty，因此调优的主要配置是connector标签中的protocol。
   实际上一个请求连接过来时，需要从executor中获取相应的线程，因此maxThread是调优的一个关键属性
4、去掉server.xml中无用的属性标签，exp：ajp，listener等等



